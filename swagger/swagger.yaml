openapi: 3.0.0
info:
  title: "API 문서"
  version: "1.0.0"
  description: "API 문서 설명"
servers:
  - url: "http://43.200.87.173:3000"
paths:
  /user/checkEmail:
    post:
      summary: "이메일 중복 확인, 중복 아니면 회원가입, 중복이면 로그인"
      tags:
        - "사용자"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                email:
                  type: "string"
                  description: "확인할 이메일 주소"
      responses:
        "200":
          description: "성공"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  isExistingUser:
                    type: "boolean"
                    description: "사용자 존재 여부"
                  user:
                    $ref: "#/components/schemas/User"
        "500":
          description: "서버 오류"

  /user/{userid}:
    get:
      summary: "사용자 정보 조회"
      tags:
        - "사용자"
      parameters:
        - name: "userid"
          in: "path"
          required: true
          schema:
            type: "string"
          description: "조회할 사용자 ID"
      responses:
        "200":
          description: "성공적으로 사용자 정보를 조회"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: "사용자를 찾을 수 없음"
        "500":
          description: "서버 오류"

    put:
      summary: "사용자 프로필 업데이트(닉네임, 프사 둘 중 하나만도 가능)"
      tags:
        - "사용자"
      parameters:
        - name: "userid"
          in: "path"
          required: true
          schema:
            type: "string"
          description: "업데이트할 사용자 ID"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                nickname:
                  type: "string"
                  description: "사용자 닉네임"
                profileImage:
                  type: "string"
                  description: "프사 동물 이름"
      responses:
        "200":
          description: "성공적으로 사용자 프로필을 업데이트"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: "사용자를 찾을 수 없음"
        "500":
          description: "서버 오류"

    delete:
      summary: "탈퇴"
      tags:
        - "사용자"
      parameters:
        - name: "userid"
          in: "path"
          required: true
          schema:
            type: "string"
          description: "삭제할 사용자 ID"
      responses:
        "200":
          description: "성공적으로 사용자를 삭제"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  message:
                    type: "string"
                    description: "사용자 삭제 성공 메시지"
        "404":
          description: "사용자를 찾을 수 없음"
        "500":
          description: "서버 오류"

  /score/total:
    get:
      summary: "모든 사용자 누적 점수를 내림차순으로 가져오기"
      tags:
        - "점수"
      responses:
        "200":
          description: "성공적으로 모든 사용자 정보를 조회"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/User"
        "500":
          description: "서버 오류"

    /score/:
      get:
        summary: "모든 사용자 이번 시간 점수를 내림차순으로 가져오기"
        tags:
          - "점수"
        responses:
          "200":
            description: "성공적으로 모든 사용자 정보를 조회"
            content:
              application/json:
                schema:
                  type: "array"
                  items:
                    $ref: "#/components/schemas/User"
          "500":
            description: "서버 오류"
  /score/{userid}:
    put:
      summary: "사용자 점수 및 플레이 횟수 업데이트"
      tags:
        - "사용자"
      parameters:
        - name: "userid"
          in: "path"
          required: true
          schema:
            type: "string"
          description: "업데이트할 사용자 ID"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                score:
                  type: "number"
                  description: "새로운 점수"
                playCount:
                  type: "integer"
                  description: "플레이 횟수"
      responses:
        "200":
          description: "성공적으로 사용자 점수 및 플레이 횟수를 업데이트"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  message:
                    type: "string"
                    description: "점수 업데이트 성공 메시지"
                  user:
                    $ref: "#/components/schemas/User"
        "404":
          description: "사용자를 찾을 수 없음"
        "500":
          description: "서버 오류"

  /game/globalWord:
    get:
      summary: "글로벌 단어 제공"
      tags:
        - "게임"
      responses:
        "200":
          description: "성공적으로 글로벌 단어 제공"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  word:
                    type: "string"
                    description: "글로벌 단어"
        "500":
          description: "서버 오류"

components:
  schemas:
    User:
      type: "object"
      properties:
        _id:
          type: "string"
        email:
          type: "string"
        nickname:
          type: "string"
        score:
          type: "number"
          description: "누적 점수"
        totalScore:
          type: "number"
          description: "총 누적 점수"
        playCount:
          type: "number"
          description: "게임 플레이 횟수"
        profileImage:
          type: "string"
          description: "프로필 이미지 URL"
